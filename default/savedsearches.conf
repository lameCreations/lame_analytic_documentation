[update_index_info]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = lame_analytic_documentation
request.ui_dispatch_view = search
search = | eventcount summarize=false index=* | dedup index | fields index\
| eval usegroup = "tbd"\
| eval description = "tbd"\
| lookup index_info index as index output index as foo\
\
| outputlookup index_info

[update_sourcetype_info]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = lame_analytic_documentation
request.ui_dispatch_view = search
search = | tstats count where index=* groupby index, sourcetype | stats values(sourcetype) as sourcetype by index\
| mvexpand sourcetype\
| eval description = "tbd"\
| eval usegroup = "tbd"\
| lookup sourcetype_info index as index, sourcetype as sourcetype output sourcetype as foo\
| where isnull(foo)\
| outputlookup sourcetype_info append=true

[update_source_info]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = lame_analytic_documentation
request.ui_dispatch_view = search
search = | tstats count where index=* sourcetype=stash groupby index, source | stats values(source) as source by index\
| mvexpand source\
| eval description = "tbd"\
| eval usegroup = "tbd"\
| lookup source_info index as index, source as source output source as foo\
| where isnull(foo)\
| outputlookup source_info append=true

[update_analytics_info]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
description = saved search to update the KV store for analytics
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = lame_analytic_documentation
request.ui_dispatch_view = search
search = | rest splunk_server=local /servicesNS/-/-/data/ui/views\
| search eai:acl.app=* \
| lookup dashboard_details id as id output details, mitre, usecase\
| fillnull value="TBD" usecase, mitre\
| rex field="id" "(?<urlField>[^\/]+)$"\
\
``` extract the whole query ```\
| rex field=eai:data "(?s)<query>(?<queries>.*?)<\/query>.*?" max_match=0\
\
| table queries, sources, sourcetypes, eventtypes, datasources, app.owner, urlField, eai:acl.app author, eai:acl.sharing details, mitre, usecase, urlField\
\
| rename eai:acl.app as myapp\
\
| appendcols\
\
  [ search index=summary source="dashboard_views"\
  | table myapp, file, method, status,  user\
  | stats dc(user) as dc_user count by myapp, file\
  | rename file as urlField\
  | table myapp, urlField, count, dc_user\
  ]\
| mvexpand queries\
\
| where NOT queries=""\
\
``` extract sourcetype, source, or eventtype field & values; exclude negated matches ```\
| rex field=queries "(?<!(?#Skip excluded sourcetypes)\bNOT\s)(?i)(?<sourcetypes>sourcetype(?:\s*(?:=|::)[\s\x22]*[-.:\w\x2a]+|\s+IN\s+\x28[-.:\w,\s]+\x29))" max_match=0\
| rex field=queries "(?<!(?#Skip excluded sources)\bNOT\s)(?i)(?<sources>source(?:\s*(?:=|::)[\s\x22]*[-.:\w\x2a]+|\s+IN\s+\x28[-.:\w,\s]+\x29))" max_match=0\
| rex field=queries "(?<!(?#Skip excluded eventtypes)\bNOT\s)(?i)(?<eventtypes>eventtype(?:\s*(?:=|::)[\s\x22]*[-.:\w\x2a]+|\s+IN\s+\x28[-.:\w,\s]+\x29))" max_match=0\
\
``` extract host and index field & values; exclude negated matches ```\
| rex field=queries "(?#Skip excluded hosts)(?<!\bNOT\s)(?i)(?<hosts>host(?:\s*(?:=|::)[\s\x22]*[-.:\w\x2a]+|\s+IN\s+\x28[-.:\w,\s]+\x29))" max_match=0\
| rex field=queries "(?#Skip excluded indexes)(?<!\bNOT\s)(?i)(?<indexes>index(?:\s*(?:=|::)[\s\x22]*[-.:\w\x2a]+|\s+IN\s+\x28[-.:\w,\s]+\x29))" max_match=0\
\
``` extract Lookup, InputLookup, and OutputLookup commands & values; must always be after a pipe character ```\
| rex field=queries "(?i)\x7c\s*(?<lookups>lookup\b[\s\x22]+[-.:\w]+)" max_match=0\
| rex field=queries "(?i)\x7c\s*(?<inputlookups>inputlookup\b[\s\x22]+[-.:\w]+)" max_match=0\
| rex field=queries "(?i)\x7c\s*(?<outputlookups>outputlookup\b[\s\x22]+[-.:\w]+)" max_match=0\
\
``` Trim extraneous double quotes from captured fields ```\
| rex mode=sed field=sourcetypes "s/\x22//g"\
| rex mode=sed field=sources "s/\x22//g"\
| rex mode=sed field=eventtypes "s/\x22//g"\
| rex mode=sed field=hosts "s/\x22//g"\
| rex mode=sed field=indexes "s/\x22//g"\
| rex mode=sed field=lookups "s/\x22//g"\
| rex mode=sed field=inputlookups "s/\x22//g"\
| rex mode=sed field=outputlookups "s/\x22//g"\
\
| eval datasources=mvdedup(mvappend(sourcetypes, sources, eventtypes, indexes, hosts, lookups, inputlookups, outputlookups))\
| eval description = "tbd"\
| table urlField, queries, description, datasources, myapp, sourcetypes, sources, eventtypes, indexes, hosts, lookups, inputlookups, outputlookups\
| lookup analytics_info queries as queries urlField as urlField myapp as myapp output myapp as foo\
| where isnull(foo)\
| outputlookup analytics_info append=true
